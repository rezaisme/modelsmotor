
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" >
    <head>
        <title>Power BI Error</title>
        <meta http-equiv="X-UA-Compatible" content="IE=edge;" />

        <meta charset="utf-8">
        <meta name="description" content="">
        <meta name="format-detection" content="telephone=no" />
        <link rel="shortcut icon" href="/images/PowerBI_Favicon.ico" />
        
    <!-- Please do not add any script before this line -->
    <script> function cdnFallback(event) {var date = new Date(); var failedRequestUrl = 'unknown'; var sessionSource = 'unknown'; var statusCode = 'unknown'; var durationMs = 'unknown'; var maxAgeInSeconds = 8 * 60 * 60;if (event && event.currentTarget && event.currentTarget.src) {failedRequestUrl = event.currentTarget.src;}if (failedRequestUrl && typeof this.performance.getEntriesByName === 'function' && this.performance.getEntriesByName(failedRequestUrl)[0]) {statusCode = this.performance.getEntriesByName(failedRequestUrl)[0].responseStatus;durationMs = this.performance.getEntriesByName(failedRequestUrl)[0].duration;}sessionSource = false ? '' : window.sessionSource;try { document.cookie = 'disablecdn=cdnRequestFailureTimestamp:' + date.toUTCString() + '-cdnRequestFailureUrl:' + failedRequestUrl + '-sessionSource:' + sessionSource + '-statusCode:' + statusCode + '-durationMs:' + durationMs + '; max-age=' + maxAgeInSeconds + '; secure; partitioned; samesite=none';} catch (err) {}if (true) { var newUrl = new URL(window.location.href);newUrl.searchParams.set('disablecdnExpiration', String(Math.round(new Date() / 1000 + maxAgeInSeconds)));window.location.href = newUrl.href; } else { window.location.reload(true); } }</script>


        
    <script>


    var powerBIAccessToken = '';
    var powerBIAccessTokenExpiry = '';
    var baseUrl = window.location.protocol + "//" + window.location.host;
    var powerbi = {
        session : {
            userInfo: {
                name:  '',
                givenName: '',
                surname: '',
                puid: '',
                uoid: '',
                alternateEmail: '',
                hasAutoAssignedLicense: false
            }
        }
    };
    powerbi.telemetrySamplingRules = { appInsights: [{ purpose: "CriticalError", sampleRate: 1 },{ purpose: "CustomerAction", sampleRate: 1 },{ purpose: "Verbose", sampleRate: 1 }], perf: [{ purpose: "CriticalError", sampleRate: 1 },{ purpose: "CustomerAction", sampleRate: 1 },{ purpose: "Verbose", sampleRate: 1 }] };

    powerbi.build = '13.0.23312.64';
    powerbi.buildDetails = '13.0.23312.64';
    powerbi.clientVersion = '2405.2.19436-train';
    powerbi.common = {};
    powerbi.common.cultureInfo = 'en-US';
    powerbi.common.unmappedCultureInfo = 'en-US';
    powerbi.common.formattingLocale = 'en-US';
    powerbi.common.isCurrentContextRtl = 'False';
    powerbi.visualCDNBlobContainerUrl = 'prod';
    powerbi.cvUrl = 'https://pbivisuals.powerbi.com';
    var useCDN = 'True';
    var clusterUri =  'https://api.powerbi.com';
    var cdnUrl = 'https://content.powerapps.com/resource/powerbiwfe';
    var apiUri =  'https://api.powerbi.com';
    var tenantId = '';
    var previousTenantId =  '';
    var allowTelemetry = true;
    var appInsightsV2InstrKey = '64d56471-807d-41d8-a331-67e38c1bbd8c';
    var appInsightsV2EndpointUrl = '';
    var triShellAppInsightsV2ConnectionInfo = 'InstrumentationKey=433d8c1b-e63d-4935-8917-fbb39ecb7b51;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/';
    var telemetrySessionId =  '45c792a5-eba7-46c5-b5a6-4771f63ce57a';
    var optimizedAppMetadataForAppLandingEnabledForBootstrap = 'true';
    var requestWV2First = true;
    var powerBIGoalsEnabledForBootstrap = false;
    var embeddedWebContentIframeSource = 'https://app.pbiwebcontent.com/webcontentsandbox.html';
    var supportedSaasMarketplaceRedirects = 'https://local.spza.microsoft-int.com;https://appsource.microsoft.com;https://appgallery.spza-staging.net;https://appgallery.spza-internal.net';
    var saasMarketplaceUrlOrigin = 'https://appsource.microsoft.com';
    var npsNewUrlOrigin = 'https://world.ces.microsoftcloud.com';
    var feUrl = 'https://app.powerbi.com';
    var extensionUrls = {'rfx': 'https://pbirfx.powerbi.com', 'dfw': 'https://pbidfw.powerbi.com', 'dpe': 'https://pbidpe.powerbi.com', 'lhe': 'https://pbilhe.powerbi.com', 'des': 'https://pbides.powerbi.com', 'spc': 'https://pbispc.powerbi.com', 'adx': 'https://pbiadx.powerbi.com', 'stm': 'https://pbistm.powerbi.com', 'scc': 'https://digitalsupplychain.microsoft.com', 'adf': 'https://pbiadf.powerbi.com', 'env': 'https://pbienv.powerbi.com', 'gql': 'https://pbigql.powerbi.com', 'fxs': 'https://pbifxs.powerbi.com', 'dmh': 'https://pbidmh.powerbi.com', 'hls': 'https://pbihls.powerbi.com', 'dmr': 'https://pbidmr.powerbi.com', 'esg': 'https://pbiesg.powerbi.com', 'app': 'https://pbiapp.powerbi.com', 'exa': 'https://pbiexa.powerbi.com', 'oas': 'https://pbioas.powerbi.com', 'whs': 'https://pbiwhs.powerbi.com', 'rdb': 'https://pbirdb.powerbi.com', 'sql': 'https://pbisql.powerbi.com', 'riv': 'https://pbiriv.powerbi.com', 'doi': 'https://pbidoi.powerbi.com', 'fge': 'https://pbifge.powerbi.com', 'dbc': 'https://pbidbc.powerbi.com'};
    var environmentName = 'PROD';
    var arcAPIUrl = 'https://arc.msn.com/v4/api/selection?placement=88000350';
    var arcResourceUri = 'https://arc.msn.com/v4';
    var downloadAndroidAppFWlink = 'https://go.microsoft.com/fwlink/?LinkId=544867';
    var downloadPageFWlink = 'https://go.microsoft.com/fwlink/?linkid=526501';
    var powerBIOperator = '';
    var powerBIOperatorLocale = '';
    var o365AdminPurchaseCapacityPageUrl = 'https://portal.office.com/adminportal/home#/catalog';
    var o365PortalUrl = 'https://portal.office.com';
    var disableSignin = false;
    var xmlaEndpointApiDNSName = 'api.powerbi.com';
    var premCapacityMetricsAppAdminUrl = 'https://go.microsoft.com/fwlink/?linkid=2114036';
    var microsoftGraphUrl = 'https://graph.microsoft.com';
    var playgroundUrl = 'https://playground.powerbi.com/';
    var reflexAud = 'https://prod.reflex.microsoft.com/.default';
    var reflexUrl = 'https://neu.rmm.api.prd.trafficmanager.net/api/v1';
    var adminCenterSupportPageUrl = 'https://aka.ms/contact-support';
    var wfeClusterName = 'app-PBI-WFE-SOUTH-EAST-ASIA';
    var supportPageUrl = 'https://support.powerbi.com';
    var documentationUrl = 'https://go.microsoft.com/fwlink/?linkid=2125441';
    var buyFabricLink = 'https://aka.ms/fabricibiza';
    var supportCenterIframeUrl = 'https://admin.powerplatform.microsoft.com';
    var powerPlatformClusterCategory = 'prod';
    </script>
        
    <link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/styleLibrary.min.1514b22a3b8c7ef488d8.css" onerror=cdnFallback(event) />
<link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/powerbi.common.externals.min.45febe62502627ae464d.css" onerror=cdnFallback(event) />
<link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/powerbi.web.externals.min.3ff78e9b733c085e20a3.css" onerror=cdnFallback(event) />
<link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/InfoNav.Common.min.a2bd4024265b5d6e8c59.css" onerror=cdnFallback(event) />
<link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/powerBICommon.min.0a88a17616f1e34fa71c.css" onerror=cdnFallback(event) />
<link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/powerBIProvidersCommon.min.000a70741198babfab37.css" onerror=cdnFallback(event) />

    <link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/powerbi.min.82d66061bfcc8da660a0.css" onerror=cdnFallback(event) />
<link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/explorationContainer.min.df5c326d664e2051922a.css" onerror=cdnFallback(event) />
<link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/visuals.min.5de48a73a98869f02856.css" onerror=cdnFallback(event) />
<link rel="stylesheet" href="https://content.powerapps.com/resource/powerbiwfe/styles/powerBIProvidersCommon.min.000a70741198babfab37.css" onerror=cdnFallback(event) />


    </head>
    <body>
    





<div class="landingController">
    <div id="topBar">
        <div class="topNavLeft">
                <a class="powerBILogoText" href="/">Power BI</a>
        </div>
        <!-- //TODO Need to bring back the smiley button -->
    </div>
    <div class="contentMain error">
        <div class="owlContainer" data-testid="owl-container">
            <div class="contentErrorImage" data-testid="content-error-image">
                <img src="13.0.23312.64/images/errors/owl_searching.png" />
            </div>
                <div class="contentErrorText" data-testid="content-error-text">We couldn't find the page you were looking for.</div>
                <div class="contentErrorDescription">TECHNICAL DETAILS <br/>An unknown error occurred. If you continue to see this error, please provide the following information when requesting support.</div>
                <div class="contentErrorItemText" data-testid="content-error-item-text">Date and Time: 2024-05-24 02:13:21Z</div>
                <div class="contentErrorItemText" data-testid="content-error-item-text">Activity Id: 45c792a5-eba7-46c5-b5a6-4771f63ce57a</div>
                <div class="contentErrorItemText"></div>
                <div class="continueLink">
                    <a class="continueLinkText" target="_blank" href=/>Go back home</a>
                </div>
        </div>
    </div>
</div>

    
    <script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['polyfills.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/polyfills.min.60aa9d277951c58635ff.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['polyfills.min.js'].end = Date.now();</script>

    <script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['lodash.bundle.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/lodash.bundle.min.7e779a5eb506967769ba.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['lodash.bundle.min.js'].end = Date.now();</script>

        <script>
        // Implement enqueueCommand inline and defer localytics loading so page load is not blocked
        LocalyticsGlobal = 'localytics';
        localytics = { enqueueCommand: function () { this.q.push(arguments); }, t: Number(new Date), q: [] };
    </script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['hash-manifest.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="13.0.23312.64/scripts/hash-manifest.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['hash-manifest.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['jquery.globalize/globalize.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/jquery.globalize/globalize.min.8e8ec43af69cf3d5d7aa.js" defer   onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['jquery.globalize/globalize.min.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['jquery.globalize/globalize.culture.en-US.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/jquery.globalize/globalize.culture.en-US.07ca294f77f622a072a5.js" defer   onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['jquery.globalize/globalize.culture.en-US.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['jQuery.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/jquery.min.c8e1c8b386dc5b7a9184.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['jQuery.min.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['jquery-ui.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/jquery-ui.min.54471b21b524931a54a1.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['jquery-ui.min.js'].end = Date.now();</script>
<script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['require.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/require.min.c1195d49355cee73bd97.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['require.min.js'].end = Date.now();</script>
    <script>

        powerbi.common.localizedStrings = '';
    </script>

    <script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['telemetry.bundle.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/telemetry.bundle.min.9454b54f3133820b4de2.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['telemetry.bundle.min.js'].end = Date.now();</script>

    <script type="text/javascript">this.parseTimeMarkers = this.parseTimeMarkers || {}; this.parseTimeMarkers['teamsTelemetry.bundle.min.js'] = { nominalStart: Date.now(), start: Date.now(), initial: true }; </script>
<script type="text/javascript" src="https://content.powerapps.com/resource/powerbiwfe/scripts/teamsTelemetry.bundle.min.fd0a0de80bc711e70188.js"  onerror=cdnFallback(event) ></script>
<script type="text/javascript">this.parseTimeMarkers['teamsTelemetry.bundle.min.js'].end = Date.now();</script>


<script>
        // todo: logic in cshtml files that needs compile time checks should be moved into TS files and included in here (similar to how bootstrap.ts is handled)
        var errorCode = '404';
        var errorType = '';
        var requestId = '';
        var errorInfo = '';
        var tenantIdFromRequest = '';
        var userPuidFromRequest = '';
        var initialRequestStatusCode = '';
        var errorArray =  '';
        var errorArrayObject = errorArray ? JSON.parse(errorArray) : null;
        var nullPuid = '0';

        // If tenant and user metadata are not present on window already, set them from pre-redirect page context.
        if (!window.tenantId && tenantIdFromRequest) {
            window.tenantId = tenantIdFromRequest;
        }

        // Log PUID only when connection string exists and is within one hour.
        if (window.sessionStorage.getItem('appInsightsConnectionStringInfo')) {
            var appInsightsConnectionStringInfo = JSON.parse(window.sessionStorage.getItem('appInsightsConnectionStringInfo'));
            var sessionStartTime = new Date(appInsightsConnectionStringInfo.timestamp);
            var currentTime = new Date(Date.now());
            if (currentTime.getHours() - sessionStartTime.getHours() <= 1) {
                if (!window.powerbi?.session?.userInfo?.puid && userPuidFromRequest) {
                    if (window.powerbi?.session?.userInfo) {
                        window.powerbi.session.userInfo.puid = userPuidFromRequest;
                    }
                }
            }
        } else if (window.powerbi?.session?.userInfo?.puid) {
            window.powerbi.session.userInfo.puid = nullPuid;
        }

        var telemetryService = powerbi.createTelemetryService(powerbi.createTelemetryOptions(), powerbi.createTelemetryHostService(), powerbi.createUserActivityContextService());
        
            
                telemetryService.logEvent(powerbi.telemetry.WFEError, { errorCode1: errorCode, errorType, requestId, errorInfo, initialRequestStatusCode});
            

        try {
            localStorage.removeItem('pbiTeamsLastVisited');
        } catch (e) {
            telemetryService.logEvent(powerbi.telemetry.AppLocalStorageError);
        }
        
</script>

    </body>
</html>
